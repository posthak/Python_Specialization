"""
–ó–∞–¥–∞–Ω–∏–µ No5
üìå –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∑–∞–¥–∞—á–∏ 3 –∏ 4. –°–æ–∑–¥–∞–∏ÃÜ—Ç–µ –∫–ª–∞—Å—Å –ø—Ä–æ–µ–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ –∏–º–µ–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã:
üìå –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö (—Ñ—É–Ω–∫—Ü–∏—è –∏–∑ –∑–∞–¥–∞–Ω–∏—è 4)
üìå –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É - —Ç—Ä–µ–±—É–µ—Ç —É–∫–∞–∑–∞—Ç—å –∏–º—è –∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
–≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ –∏—Å–ø–æ–ª—å–∑—É–∏ÃÜ—Ç–µ –º–∞–≥–∏—á–µ—Å–∫–∏–∏ÃÜ –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–∏ÃÜ. –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç,
–≤—ã–∑—ã–≤–∞–∏ÃÜ—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞. –ê –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å, –ø–æ–ª—É—á–∏—Ç–µ –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–∏ÃÜ.
üìå –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ï—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–µ–Ω—å—à–µ, —á–µ–º –≤–∞—à —É—Ä–æ–≤–µ–Ω—å, –≤—ã–∑—ã–≤–∞–∏ÃÜ—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞.
"""
import json


class BasedExep(Exception):
    pass


class NameErr(BasedExep):
    pass


class LevelErr(BasedExep):
    def __init__(self, value):
        self.value = value

    def __str__(self):
        return f"–û—à–∏–±–∫–∞ —É—Ä–æ–≤–Ω—è"


class User:
    def __init__(self, name: str, user_id: str, level: str = '0') -> None:
        self.name = name
        self.user_id = user_id
        self.level = level


class CheckUserLogin:
    users = []

    # def __init__(self):
    @staticmethod
    def create_user(name, id, level):
        try:
            if level > 3:
                raise LevelErr(level)
        except LevelErr as e:
            print(e)
        else:
            obj = User(name, id, level)
            CheckUserLogin.users.append(obj)

    @staticmethod
    def load_users():
        with open('13.json', 'r', encoding='UTF-8') as js_f:
            user_dict = json.load(js_f)
            for level, user_list in user_dict.items():
                for id, name in user_list.items():
                    CheckUserLogin.users.append(User(name, id, level))

    @staticmethod
    def get_login_level(name):
        try:
            for el in CheckUserLogin.users:
                if name == el.name:
                    return '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω'
                raise NameErr()
        except NameErr as e:
            return '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'



if __name__ == "__main__":
    a = CheckUserLogin()
    a.load_users()
    print(len(a.users))
    a.create_user('Ivanov', '08', 2)
    print(len(a.users))
    print(a.get_login_level('–ù–æ–≤–∏–∫–æ–≤'))
